Q: When would you want to use a remote repository rather than keeping all your work local?

A: When one works on multiple machines (work vs home for example).

Q: Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

A: It is possible that one may not want to push changes to GitHub in order to keep
them private for the time being, or perhaps one would not wish to pull changes
from GitHub if they do not wish to have those changes present on their current
machine.

Q: Describe the differences between forks, clones, and branches. When would you 
use one instead of another?

A: A fork is used to copy another user's repository so that you can edit it
without changing their original copy. A clone is used to pull a direct copy of a 
repository onto your local machine from GitHub, or perhaps just to create a copy.
A branch is when multiple versions of a file exist in parallel that share some 
common ancestor, and is useful for maintaining different versions of a file or
testing new changes without affecting the original.

Q: What is the benefit of having a copy of the last known state of the remote 
stored locally?

A: The benefit is that one can then decide to merge the copy or manipulate it in
some way without needing an internet connection.

Q: How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?

A: It would be possible to collaborate remotely using a tool like Dropbox. However, 
while simpler to use, it lacks a lot of functionality such as branching, merging,
etc.

Q: When would you want to make changes in a separate branch rather than directly in 
master? What benefits does each approach have?

A: Trying new changes in a seperate branch first ensures that you do not mess up
the official version of the project, and it also means that when you are ready 
to push your changes you can give your fellow collaborators a chance to see the
changes before they are made live.